#!/usr/bin/env bash
# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Jan Adam Halama
set -euo pipefail

CONFIG="$HOME/Library/Application Support/com.mitchellh.ghostty/config"
THEMES_DIR="$HOME/.ghostty-themes"
STATE_FILE="$THEMES_DIR/.current"
MARK_START="# >>> GHOSTTY THEME START (managed) >>>"
MARK_END="# >>> GHOSTTY THEME END (managed) <<<"

macos_reload_ghostty() {
  [ "$(uname)" = "Darwin" ] || return 0
  /usr/bin/osascript <<'OSA' >/dev/null 2>&1 || true
tell application "Ghostty" to activate
tell application "System Events"
  if exists (process "Ghostty") then
    keystroke "," using {command down, shift down} -- ⌘⇧,
  end if
end tell
OSA
}

usage() {
  echo "Usage: $(basename "$0") {list|use <name>|toggle <a> <b>|current}"
  exit 1
}

ensure_markers() {
  if ! grep -qF "$MARK_START" "$CONFIG" 2>/dev/null; then
    printf "\n%s\n# (autogenerated)\n%s\n" "$MARK_START" "$MARK_END" >> "$CONFIG"
  fi
}

apply_theme() {
  local name="$1"
  local file="$THEMES_DIR/$name.conf"

  [ -f "$file" ] || { echo "Missing theme file: $file"; exit 1; }
  [ -f "$CONFIG" ] || touch "$CONFIG"

  ensure_markers

  local tmp
  tmp="$(mktemp)"

  # Replace the managed block (avoid awk 'in' as a var; use 'inside')
  if /usr/bin/awk -v start="$MARK_START" -v end="$MARK_END" -v file="$file" '
    $0==start { print; system("cat \"" file "\""); inside=1; next }
    inside && $0!=end { next }
    inside && $0==end { inside=0; print; next }
    { print }
  ' "$CONFIG" > "$tmp"; then
    cp "$CONFIG" "$CONFIG.bak.$(date +%s)"
    mv "$tmp" "$CONFIG"
    printf "%s\n" "$name" > "$STATE_FILE"
    echo "Switched Ghostty theme to: $name"
    macos_reload_ghostty
  else
    rm -f "$tmp"
    echo "Failed to update config."
    exit 1
  fi
}

cmd="${1:-}"; shift || true
case "$cmd" in
  list)
    ls -1 "$THEMES_DIR"/*.conf 2>/dev/null | sed 's#.*/##; s#\.conf$##'
    ;;
  current)
    if [ -f "$STATE_FILE" ]; then cat "$STATE_FILE"; else echo "unknown"; fi
    ;;
  use)
    name="${1:?theme name missing}"
    apply_theme "$name"
    ;;
  toggle)
    A="${1:-dark}"; B="${2:-light}"
    cur="unknown"
    [ -f "$STATE_FILE" ] && cur="$(cat "$STATE_FILE" 2>/dev/null || true)"
    if [ "$cur" = "$A" ]; then apply_theme "$B"; else apply_theme "$A"; fi
    ;;
  *) usage ;;
esac